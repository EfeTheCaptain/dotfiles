#include <stdio.h>
#include <stdlib.h>
#include <sys/utsname.h>
#include <pthread.h>

#include "colour.h"

int main() {
    struct utsname sysInfo;
    uname(&sysInfo);
    pthread_t threads[6];
    char *output = NULL;

    pthread_create(&threads[0], NULL, user, NULL);
    pthread_create(&threads[1], NULL, os, NULL);
    pthread_create(&threads[2], NULL, kernel, NULL);
    pthread_create(&threads[3], NULL, uptime, NULL);
    pthread_create(&threads[4], NULL, shell, NULL);

    for (int i = 0; i < 5; i++) {
        pthread_join(threads[i], NULL);
    }

    asprintf(&output,
        "╭───%s%s%s\n│\n"
        "├───%s%s%s\n│\n"
        "├───%s%s%s\n│\n"
        "├───%s%ldh %ldm\n│\n"
        "├───%s%s%s\n│\n"
        "╰───%s%s%s\n",
        UserText, TextColour, username,
        OsText, TextColour, osname,
        KernelText, TextColour, krnlver,
        UptimeText, TextColour, uptimeH, uptimeM,
        ShellText, TextColour, shellname,
        PackageText, TextColour, pkgCount
    );

    if (output) {
        printf("%s", output);
        free(output);  // Prevents memory leaks
    }

    pthread_create(&threads[5], NULL, colourDraw, NULL);
    pthread_join(threads[5], NULL);
    printf("%s", RESET);

    return 0;
}
