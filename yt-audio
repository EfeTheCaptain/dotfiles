#!/bin/bash

# Function to clean up on exit
cleanup() {
    [ -n "$tmpfile" ] && rm -f "$tmpfile"
}
trap cleanup EXIT

# Get search query
read -rp "🔍 Search YouTube: " query
[ -z "$query" ] && exit 1

# Create temp file for results
tmpfile=$(mktemp) || { echo "Error: Could not create temp file"; exit 1; }

# Get 5 results as JSON array
if ! yt-dlp --flat-playlist --default-search "ytsearch5" -j "$query" 2>/dev/null | jq -s '.' > "$tmpfile"; then
    echo "Error: Search failed (check connection/install)"
    exit 1
fi

results=$(cat "$tmpfile")
if [ -z "$results" ] || [ "$results" = "[]" ]; then
    echo "Error: No results found"
    exit 1
fi

# Format results for display
formatted_results=$(jq -r '.[] | 
    ((.duration? // 0) | tonumber | strftime("%M:%S")) as $dur |
    "[\($dur)] \(.title)"' "$tmpfile")

# Select with fzf
selected=$(echo "$formatted_results" | fzf --height=40% --reverse --cycle --prompt="Select song: " --bind 'ctrl-c:abort')
[ -z "$selected" ] && exit 0

# Extract clean title
title=$(echo "$selected" | sed -E 's/^\[[^]]*\] //' | sed 's/[[:space:]]*$//')

# Get URL by matching exact title
url=$(jq -r --arg t "$title" '
    .
